---
- name: Install tomcat 10 on ubuntu 22
  hosts: node-u
  become: yes
  vars:
    java_package_name: openjdk-11-jdk
    user_name: tomcat
    group_name: tomcat
    user_home: /opt/tomcat
    user_shell: /bin/false
    tomcat_version: "10.1.7"
    tomcat_major_version: "10"
    tomcat_service_name: tomcat.service  
  tasks:
    - name: java installation
      ansible.builtin.apt:
        name: "{{ java_package_name }}"
        update_cache: yes
        state: present
    - name: create  a tomcat group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present      
    - name: create a tomcat user
      ansible.builtin.user:
        name: "{{ user_name }}"
        create_home: yes
        group: "{{ group_name }}"
        home: "{{ user_home }}"
        shell: "{{ user_shell }}"
        state: present
    - name: download tomcat 10.1.7
      ansible.builtin.unarchive:
        src: https://dlcdn.apache.org/tomcat/tomcat-{{ tomcat_major_version }}/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz
        remote_src: yes  
        dest: "{{ user_home }}"
    - name: create a symbolic link      
      ansible.builtin.file:
        src: "{{ user_home }}/apache-tomcat-{{ tomcat_version }}"
        dest: "{{ user_home }}/latest"
        state: link  
    - name: change permissions
      ansible.builtin.file:
        dest: "{{ user_home }}"
        recurse: true
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        state: directory
    - name: add execute permission to shell files
      ansible.builtin.command: sudo sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh'
    - name: create systemd unit file
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        owner: "{{ user_name }}"
        group: "{{ group_name }}"    
    - name: reload daemon and start tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        daemon_reload: true
        enabled: true
        state: started       
    - name: copy user.xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ user_home }}/latest/conf/tomcat-users.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: copy context file to manager app
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: copy context file host manager
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}/latest/webapps/host-manager/META-INF/context.xml"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: restart tomcat
      ansible.builtin.systemd:
        name: "{{ tomcat_service_name }}"
        state: restarted       
